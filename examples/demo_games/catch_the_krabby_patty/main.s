#-----------------------------------------------------------
# VideoStation Assembler
# (C) 2025 Ryandracus Chapman
#-----------------------------------------------------------
# Milestone Program 2: Catch The Krabby Patty
#-----------------------------------------------------------
# PlayStation Graphics Program 10: 
# Do not let the 'Krabby Patties' go to waste! As they fall  
# from the ceiling in the krusty krab, use the bucket and d-pad 
# to catch them.
#-----------------------------------------------------------
.arch ps1
.syntax asmpsx

VS_IO equ 0x1F800000
VS_GP0 equ 0x1810
VS_GP1 equ 0x1814
VS_FILL_SCREEN equ 0x2000000
VS_CPU_TO_VRAM equ 0xA0000000
VS_TEXTURE_FOUR_POINT_POLY equ 0x2F000000
VS_CMD_STAT_READY equ 0x4000000
VS_DMA_ENABLE equ 0x1000000
VS_GPU_DMA equ 0x10A0
VS_GPU_BCR equ 0x10A4
VS_GPU_CHCR equ 0x10A8
VS_MODE equ 0 
VS_WIDTH equ 256 
VS_HEIGHT equ 240

VS_FONTW equ 8 
VS_FONTH equ 11

VS_IMGW equ 128 
VS_IMGH equ 87

VS_BIMGW equ 32 
VS_BIMGH equ 32

VS_KPIMGW equ 32 
VS_KPIMGH equ 32

; GAME VARIABLES

VS_BIMGX equ 112 
VS_BIMGY equ 198
VS_KPIMGX equ 112 
VS_KPIMGY equ 20 
VS_VELOCITY equ 2
VS_SCORE equ 0

; CHOOSE R,G, B VALUES FROM 0 TO 255

VS_RED equ 0
VS_GREEN equ 0
VS_BLUE equ 0

; vs_gp0 = vs_io_addr + vs_gp0;
; vs_gp1 = vs_io_addr + vs_gp1;

InitVideo:
	li t0, VS_IO           ; vs_io_addr = 0x1F800000; (base i/o address of memory map) 
	sw zero, VS_GP1(t0)   ; *vs_gp1 = vs_cmd_gpu_reset;
	li t1, 0x4000000       ; vs_cmd_dma_req = 0x4000000 (no dma)
	sw t1, VS_GP1(t0)     ; *vs_gp0 = vs_cmd_dma_req;
	li t1, 0x8000000       ; vs_cmd_display_mode = 0x8000000 + mode;
	addiu t1, t1, VS_MODE ; vs_cmd_display_enable += mode;
	sw t1, VS_GP1(t0)     ; *vs_gp1 = vs_cmd_display_enable;
	li t5, 0xC4E24E        ; vs_hrange = 0xC4E24E;
	li t6, 0x040010        ; vs_vrange = 0x040010;
	li t1, 0x06000000      ; vs_cmd_horizontal_range = 0x6000000
	addu t1, t1, t5      ; vs_cmd_horizontal_range += vs_hrange;
	sw t1, VS_GP1(t0)     ; *vs_gp1 = vs_cmd_horizontal_range;
	li t1, 0x07000000      ; vs_cmd_vertical_range = 0x7000000;
	addu t1, t1, t6      ; vs_cmd_vertical_range += vs_vrange;
	sw t1, VS_GP1(t0)     ; *vs_gp1 = vs_cmd_vertical_range;
	li t1, 0x05000000      ; vs_cmd_display_x1y1 = 0x5000000; (start x, y of display = 0)
	sw t1, VS_GP1(t0)     ; *vs_gp1 = vs_cmd_display_x1y1;
	li   t1, 0xE1000000    ; cmd = gpu0_cmd_tex_page;
	addi t1, t1, 0x000508 ; cmd += 0x000508;  
	sw   t1, VS_GP0(t0)   ; *vs_gpu0 = cmd;
	li   t1, 0xE3000000    ; cmd = gpu0_cmd_draw_area_top_left;
	sw   t1, VS_GP0(t0)   ; *vs_gpu0 = cmd;
	li   t1, 0xE4000000    ; cmd = gpu0_cmd_draw_area_bot_right;
	li   t2, VS_HEIGHT
	li   t3, VS_WIDTH
	sll  t2, t2, 0x0A     ; height <<= 10;
	addu t2, t2, t3      ; height += width;
	addu t1, t1, t2      ; cmd += height;
	sw   t1, VS_GP0(t0)   ; *vs_gpu0 = cmd;
	li   t1, 0xE5000000    ; cmd = gpu0_cmd_draw_offset;
	sw   t1, VS_GP0(t0)   ; *vs_gpu0 = cmd;
	li   t1, 0x03000000    ; cmd = gpu1_cmd_display_enable;
	sw   t1, VS_GP1(t0)   ; *vs_gpu1 = cmd;
	li t2, 0x1F8010F0      ; dma_address = 0x1F8010F0;
	li t1, 0x300           ; dma_priority = 0x300;
	sw t1, 0(t2)          ; *dma_address = dma_priority;
	li t1, 0x800           ; gpu_dma_enable = 0x800;
	sw t1, 0(t2)          ; *dma_address = gpu_dma_enable;
TransferPaletteToVram:
	li t2, VS_CPU_TO_VRAM  ; vs_cmd_cpu_to_vram = 0xA0000000;
	sw t2, VS_GP0(t0)     ; *vs_gp0 = vs_cmd_cpu_to_vram;
	li t2, 0               ; x = 0;
	li t3, 256             ; y = 256;
	sll t3, t3, 0x10      ; y <<= 16;
	addu t3, t3, t2      ; y += x;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = y;
	li t2, 256             ; w = 256;
	li t3, 1               ; h = 1;
	sll t3, t3, 0x10      ; h <<= 16;
	addu t3, t3, t2      ; h += w;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = h;
	li t2, 256             ; y = 256; 
	sll t1, t2, 0x1       ; size <<= 1;
	sra t1, t1, 0x2       ; size /= 4;
	la a0, Palette
TransferPaletteLoop:
	lw t2,0(a0)
	addiu a0, a0, 0x4
	sw t2, VS_GP0(t0)
	bnez t1, TransferPaletteLoop
	subi t1, t1, 0x1
	jal DMASync
	nop
TransferBackgroundImageToVram:
	li t2, VS_CPU_TO_VRAM  ; vs_cmd_cpu_to_vram = 0xA0000000;
	sw t2, VS_GP0(t0)     ; *vs_gp0 = vs_cmd_cpu_to_vram;
	li t2, 256             ; x = 256;
	li t3, 256             ; y = 256;
	sll t3, t3, 0x10      ; y <<= 16;
	addu t3, t3, t2      ; y += x;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = y;
	li t2, VS_IMGW         ; w = VS_IMGW;
	sra t2, t2, 0x1       ; w /= 2;
	li t3, VS_IMGH         ; h = VS_IMGH;
	sll t3, t3, 0x10      ; h <<= 16;
	addu t3, t3, t2      ; h += w;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = h;
	li t1, VS_IMGW         ; x = VS_IMGW;
	li t2, VS_IMGH         ; y = VS_IMGH;
	mult t1, t2           ; size = x * y;
	mflo t1 
	sra t1, t1, 0x2       ; size /= 4;
	la a0, Sprite
TransferBackgroundLoop:
	lw t2,0(a0)
	addiu a0, a0, 0x4
	sw t2, VS_GP0(t0)
	bnez t1, TransferBackgroundLoop
	subi t1, t1, 0x1
	jal DMASync
	nop
TransferBucketImageToVram:
	li t2, VS_CPU_TO_VRAM  ; vs_cmd_cpu_to_vram = 0xA0000000;
	sw t2, VS_GP0(t0)     ; *vs_gp0 = vs_cmd_cpu_to_vram;
	li t2, 256             ; x = 256;
	li t3, 0               ; y = 0;
	sll t3, t3, 0x10      ; y <<= 16;
	addu t3, t3, t2      ; y += x;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = y;
	li t2, VS_BIMGW        ; w = VS_BIMGW;
	li t3, VS_BIMGH        ; h = VS_BIMGH;
	sll t3, t3, 0x10      ; h <<= 16;
	addu t3, t3, t2      ; h += w;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = h;
	li t1, VS_BIMGW        ; w = VS_BIMGW;
	li t2, VS_BIMGH        ; h = VS_BIMGH;
	mult t1, t2           ; size = x * y;
	mflo t1 
	sll t1, t1, 0x1       ; size <<= 1;
	sra t1, t1, 0x2       ; size /= 4;
	la a0, Bucket
TransferBucketLoop:
	lw t2,0(a0)
	addiu a0, a0, 0x4
	sw t2, VS_GP0(t0)
	bnez t1, TransferBucketLoop
	subi t1, t1, 0x1
	jal DMASync
	nop
TransferPattyImageToVram:
	li t2, VS_CPU_TO_VRAM  ; vs_cmd_cpu_to_vram = 0xA0000000;
	sw t2, VS_GP0(t0)     ; *vs_gp0 = vs_cmd_cpu_to_vram;
	li t2, 320             ; x = 320;
	li t3, 0               ; y = 0;
	sll t3, t3, 0x10      ; y <<= 16;
	addu t3, t3, t2      ; y += x;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = y;
	li t2, VS_KPIMGW       ; w = VS_KPIMGW;
	li t3, VS_KPIMGH       ; h = VS_KPIMGH;
	sll t3, t3, 0x10      ; h <<= 16;
	addu t3, t3, t2      ; h += w;
	sw t3, VS_GP0(t0)     ; *vs_gp0 = h;
	li t1, VS_KPIMGW       ; w = VS_KPIMGW;
	li t2, VS_KPIMGH       ; h = VS_KPIMGH;
	mult t1, t2           ; size = x * y;
	mflo t1 
	sll t1, t1, 0x1       ; size <<= 1;
	sra t1, t1, 0x2       ; size /= 4;
	la a0, KrabbyPatty
TransferPattyLoop:
	lw t2,0(a0)
	addiu a0, a0, 0x4
	sw t2, VS_GP0(t0)
	bnez t1, TransferPattyLoop
	subi t1, t1, 0x1
	jal DMASync
	nop
InitPad: 
    li t1,0x15
    li a0, 0x20000001
    li t2,0xB0
    li a1, 0x1f800000      ; Set Pad Buffer Address To Automatically Update Each Frame
    jalr t2                ; Jump To BIOS Routine OutdatedPadInitAndStart()
    nop ; Delay Slot
	addi sp, sp, -72
	li s0, 0x1f800000
	sw zero, 8(s0) 
	sw zero, 12(s0) 
	li t0, VS_BIMGX        ; x = VS_BIMGX;
	sw t0, 16(s0)
	li t1, VS_BIMGY        ; y = VS_BIMGY;
	sw t1, 20(s0)
	la t2, PattyInput
	li t0, VS_KPIMGX       ; krabby_patty_x = VS_KPIMGX;
	sw t0, 0(t2)
	li t1, VS_KPIMGY       ; krabby_patty_y = VS_KPIMGY;
	sw t1, 4(t2)
	la t0, Score 
	sw zero, 0(t0)
Input:
PRESSRIGHT:
    lw t0, 8(s0)
    nop 
    andi t0, t0, 0x2000
    beqz t0, PRESSLEFT
    nop 
    lw t0, 16(s0)
    nop
    addi t0, t0, VS_VELOCITY        ; x += VS_VELOCITY;
    sw t0, 16(s0)
	li t1, 224 
	bgt t0, t1, BoundPlayerRight    ; if(x > 224 0) { x = 224; }
    nop
PRESSLEFT:
    lw t0, 8(s0)
    nop 
    andi t0, t0, 0x8000
    beqz t0, KrabbyInput
    nop 
    lw t0, 16(s0)
    nop
    subi t0, t0, VS_VELOCITY       ; x -= VS_VELOCITY;
    sw t0, 16(s0)
	blez t0, BoundPlayerLeft        ; if(x <= 0) { x = 0; }
    nop
KrabbyInput:
	la t1, PattyInput
	lw t0, 4(t1) 
	li t2, 239 
	addi t0, t0, VS_VELOCITY       ; krabby_patty_y += VS_VELOCITY;
	sw t0, 4(t1)
	bgt t0, t2, ResetKrabbyPatty
	nop
TextureBackground:
	li a0, 0x0
	li a1, 0x0
	li a2, 16384
	li a3, 0x0
	sw zero, 16(sp)
	sw zero, 20(sp)
	li t1, VS_HEIGHT
	sw t1, 24(sp)
	li t1, 148 
	sw t1, 28(sp)
	sw zero, 32(sp)
	li t1, VS_IMGH 
	sw t1, 36(sp)
	li t1, VS_WIDTH
	sw t1, 40(sp)
	sw zero, 44(sp)
	li t1, VS_IMGW 
	sw t1, 48(sp)
	sw zero, 52(sp)
	li t1, VS_WIDTH
	sw t1, 56(sp)
	li t1, VS_HEIGHT
	sw t1, 60(sp)
	li t1, VS_IMGW 
	sw t1, 64(sp)
	li t1, VS_IMGH 
	sw t1, 68(sp)
	jal VS_TextureFourPointPoly
	nop
	jal DrawSync
	nop
TextureBucket:
	lw t3, 16(s0) 
	lw t4, 20(s0)
	li   t1, 0xE6000000   ; cmd = gpu0_cmd_mask_bits;
	addi t1, t1, 0x1     ; cmd += 1;
	sw t1, VS_GP0(t0)    ; *vs_gp0 = cmd;
	move a0, t3          ; x1 = VS_BIMGX;
	move a1, t4          ; y1 = VS_BIMGY;
	li a2, 0x0            ; palette = 0;
	li a3, 0x0            ; u1 = 0;
	sw zero, 16(sp)      ; v1 = 0;
	li t1, VS_BIMGX
	sw t3, 20(sp)        ; x2 = VS_BIMGX;
	li t1, VS_BIMGH
	add t1, t1, t4 
	sw t1, 24(sp)        ; y2 = VS_BIMGY + VS_BIMGH;
	li t1, 292
	sw t1, 28(sp)        ; texpage = 292; 
	sw zero, 32(sp)      ; u2 = 0;
	li t1, VS_BIMGH 
	sw t1, 36(sp)        ; v2 = VS_BIMGH;
	li t1, VS_BIMGW 
	addu t1, t1, t3
	sw t1, 40(sp)        ; x3 = VS_BIMGX + VS_BIMGW;
	sw t4, 44(sp)        ; y3 = VS_BIMGY;
	li t1, VS_BIMGW 
	sw t1, 48(sp)        ; u3 = VS_BIMGW;
	sw zero, 52(sp)      ; v3 = 0;
	li t1, VS_BIMGW 
	add t1, t1, t3
	sw t1, 56(sp)        ; x4 = VS_BIMGX + VS_BIMGW;
	li t1, VS_BIMGH 
	add t1, t1, t4 
	sw t1, 60(sp)        ; y4 = VS_BIMGY + VS_BIMGH 
	li t1, VS_BIMGW 
	sw t1, 64(sp)        ; u4 = VS_BIMGW;
	li t1, VS_BIMGH 
	sw t1, 68(sp)        ; v4 = VS_BIMGH;
	jal VS_TextureFourPointPoly
	nop
	jal DrawSync
	nop
TextureKrabbyPatty:
	la t1, PattyInput
	lw t3, 0(t1) 
	lw t4, 4(t1)
	li   t1, 0xE6000000   ; cmd = gpu0_cmd_mask_bits;
	addi t1, t1, 0x1     ; cmd += 1;
	sw t1, VS_GP0(t0)    ; *vs_gp0 = cmd;
	move a0, t3          ; x1 = VS_KPIMGX;
	move a1, t4          ; y1 = VS_KPIMGY;
	li a2, 0x0            ; palette = 0;
	li a3, 0x0            ; u1 = 0;
	sw zero, 16(sp)      ; v1 = 0;
	sw t3, 20(sp)        ; x2 = VS_KPIMGX;
	li t1, VS_KPIMGH
	add t1, t1, t4 
	sw t1, 24(sp)        ; y2 = VS_KPIMGY + VS_KPIMGH;
	li t1, 293
	sw t1, 28(sp)        ; texpage = 293; 
	sw zero, 32(sp)      ; u2 = 0;
	li t1, VS_KPIMGH 
	sw t1, 36(sp)        ; v2 = VS_KPIMGH;
	li t1, VS_KPIMGW 
	addu t1, t1, t3
	sw t1, 40(sp)        ; x3 = VS_KPIMGX + VS_KPIMGW;
	sw t4, 44(sp)        ; y3 = VS_KPIMGY;
	li t1, VS_KPIMGW 
	sw t1, 48(sp)        ; u3 = VS_KPIMGW;
	sw zero, 52(sp)      ; v3 = 0;
	li t1, VS_KPIMGW 
	add t1, t1, t3
	sw t1, 56(sp)        ; x4 = VS_KPIMGX + VS_KPIMGW;
	li t1, VS_KPIMGH 
	add t1, t1, t4 
	sw t1, 60(sp)        ; y4 = VS_KPIMGY + VS_KPIMGH 
	li t1, VS_KPIMGW 
	sw t1, 64(sp)        ; u4 = VS_KPIMGW;
	li t1, VS_KPIMGH 
	sw t1, 68(sp)        ; v4 = VS_KPIMGH;
	jal VS_TextureFourPointPoly
	nop
	jal DrawSync
	nop
DrawText:
	la t0, Score
	lw a1, 0(t0)
	la a0, Text
	addi a0, a0, 0x7
	jal VS_Int2String
	nop
	li a0, 10 
	li a1, 20 
	la a2, Text 
	move a3, v0 
	addi a3, a3, 0x7
	subi a3, a3, 0x1
	jal VS_DrawString 
	nop
DetectCollision:
	lw t2, 16(s0)
	la t0, PattyInput
	lw t1, 0(t0)
	nop
	addi t3, t2, VS_BIMGW ; size1 = rectx + VS_BIMGW;
	ble t3, t1, WaitVSync ; if(size1 < rectx2) { collide = false; goto Wait; }
	nop
	addi t3, t1, VS_KPIMGW ; size2 = rectx2 + VS_KPIMGW;
	bge t2, t3, WaitVSync
	lw t1, 20(s0)
	lw t5, 4(t0)
	addi t3, t1, VS_BIMGH ; size1 = recty + VS_BIMGH;
	ble t3, t5, WaitVSync ; if(size1 < recty2) { collide = false; goto Wait; }
	addi t2, t5, VS_KPIMGH ; size2 = recty2 + VS_KPIMGH;
	bge t1, t2, WaitVSync ; if(y2 < recty2) { collide = false; goto Wait; }
	la t0, Score 
	lw t1, 0(t0)
	nop
	addi t1, t1, 0x1 
	sw t1, 0(t0)
	b ResetKrabbyPatty
	nop
WaitVSync:              ; Wait For Vertical Retrace Period & Store XOR Pad Data
    lw t0, 0(s0)      ; Load Pad Buffer
    nop               
    beqz t0, WaitVSync ; if(pad_buffer == 0){ goto Wait; }
    nor t0, t0, zero ; pad_buffer = !(pad_buffer | 0);
    sw zero, 0(s0)    ; Store Zero To Pad Buffer
    sw t0, 8(s0)      ; Store Pad Data
main:
	b Input 
	nop
	addi sp, sp, 72
	
BoundPlayerLeft:
	sw zero, 16(s0)
	b KrabbyInput
	nop 
BoundPlayerRight:
	li t0, 224 
	sw t0, 16(s0) 
	b KrabbyInput
	nop
	
ResetKrabbyPatty:
	la t1, PattyInput
	sw zero, 4(t1)
	jal VS_Rand
	nop
	la t1, PattyInput
	andi v0, v0, 224
	sw v0, 0(t1)
	b TextureBackground
	nop
	
# Function: VS_Rand
# Purpose: Utilizes the original Doom random function to generate a random unsigned 8-bit integer
	.text 
	.globl
VS_Rand:
	la    t0, vs_rand_index
	lw    t1, 0(t0)
	nop 
	addiu t1, t1, 0x1       ; vs_rand_index++;
	andi  t1, t1, 0xFF      ; vs_rand_index &= 0xff;
	la    t2, rndtable
	addu  t2, t2, t1       ; rndtable += vs_rand_index;
	lbu   v0, 0(t2)         ; num = *rndtable;
	sw    t1, 0(t0)
	jr    ra 
	nop
	
# Function: DrawSync
# Purpose: Halts program execution until all drawing commands have been executed by the gpu 
DrawSync:
	li t0, VS_IO             ; vs_io_addr = (unsigned long*)0x1F800000;
DrawSyncLoop:
	lw t1, VS_GP1(t0)       ; gpu1 = *vs_gpu1;
	li t2, VS_CMD_STAT_READY ; gpu1_cmd = VS_CMD_STAT_READY; (delay slot)
	and t1, t1, t2         ; gpu1 &= gpu1_cmd;
	beqz t1, DrawSyncLoop    ; if(gpu1 == 0) { goto DrawSyncLoop; }
	nop 
	jr ra
	nop
	
# Function: DMASync
# Purpose: Halts program execution until all gpu dma transfers have completed
DMASync:
	li t0, VS_IO             ; vs_io_addr = (unsigned long*)0x1F800000;
DMASyncLoop:
	lw t1, VS_GPU_CHCR(t0)  ; gpu0 = *vs_gpu0;
	li t2, VS_DMA_ENABLE    ; gpu0_cmd = VS_CMD_STAT_READY; (delay slot)
	and t1, t1, t2         ; gpu0 &= gpu0_cmd;
	bnez t1, DMASyncLoop    ; if(gpu0 == 0) { goto DrawSyncLoop; }
	nop 
	jr ra
	nop

# Function: VS_TextureFourPointPoly
# Purpose: Draws a textured four-point polygon, a quad, to the display area using the GPU 
# a0: x1, a1: y1, a2: palette, a3: u1, 16(sp): v1, 20(sp): x2, 24(sp): y2, 28(sp): texpage, 32(sp): u2, 36(sp): v2, 40(sp): x3, 44(sp): y3, 48(sp): u3, 52(sp): v3
# 56(sp): x4, 60(sp): y4, 64(sp): u4, 68(sp): v4
VS_TextureFourPointPoly:   
	li   t0, VS_IO
	li   t1, VS_TEXTURE_FOUR_POINT_POLY      ; gpu0_cmd = VS_TEXTURE_FOUR_POINT_POLY;
	sw   t1, VS_GP0(t0)                     ; *vs_gpu0 = gpu0_cmd;
	andi a0, a0, 0xFFFF                     ; x1 &= 0xFFFF;
	sll  a1, a1, 0x10                       ; y1 <<= 16;
	or   a1, a1, a0                        ; y1 |= x1;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = y1;
	sll  a2, a2, 0x10                       ; palette <<= 16;
	lhu  a1, 16(sp)
	andi a3, a3, 0xFF                       ; u1 &= 0xFF; 
	andi a1, a1, 0xFF                       ; v1 &= 0xFF;
	sll  a1, a1, 0x8                        ; v1 <<= 8;
	or   a1, a1, a3                        ; v1 |= u1;
	or   a1, a1, a2                        ; v1 |= palette;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = v1;
	lhu  a0, 20(sp)
	lhu  a1, 24(sp)
	andi a0, a0, 0xFFFF                     ; x2 &= 0xFFFF;
	sll  a1, a1, 0x10                       ; y2 <<= 16;
	or   a1, a1, a0                        ; y2 |= x2;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = y2;
	lhu  a1, 36(sp)
	lhu  a2, 28(sp)
	lhu  a3, 32(sp)
	sll  a2, a2, 0x10                       ; texpage <<= 16;
	andi a3, a3, 0xFF                       ; u2 &= 0xFF; 
	andi a1, a1, 0xFF                       ; v2 &= 0xFF;
	sll  a1, a1, 0x8                        ; v2 <<= 8;
	or   a1, a1, a3                        ; v2 |= u2;
	or   a1, a1, a2                        ; v2 |= texpage;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = v2;
	lhu  a0, 40(sp)
	lhu  a1, 44(sp)
	andi a0, a0, 0xFFFF                     ; x3 &= 0xFFFF;
	sll  a1, a1, 0x10                       ; y3 <<= 16;
	or   a1, a1, a0                        ; y3 |= x3;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = y3;
	lhu  a3, 48(sp)
	lhu  a1, 52(sp)
	andi a3, a3, 0xFF                       ; u3 &= 0xFF; 
	andi a1, a1, 0xFF                       ; v3 &= 0xFF;
	sll  a1, a1, 0x8                        ; v3 <<= 8;
	or   a1, a1, a3                        ; v3 |= u3;
	sw   a1, VS_GP0(t0)                     ; *vs_gpu0 = v3;
	lhu  a0, 56(sp)
	lhu  a1, 60(sp)
	andi a0, a0, 0xFFFF                    ; x4 &= 0xFFFF;
	sll  a1, a1, 0x10                      ; y4 <<= 16;
	or   a1, a1, a0                       ; y4 |= x4;
	sw   a1, VS_GP0(t0)                    ; *vs_gpu0 = y4;
	lhu  a2, 64(sp)
	lhu  a3, 68(sp)
	andi a2, a2, 0xFF                      ; u4 &= 0xFF;
	sll  a3, a3, 0x8                       ; v4 <<= 8;
	or   a3, a3, a2                       ; v4 |= u4;
	sw   a3, VS_GP0(t0)                    ; *vs_gpu0 = v4;
	jr ra
	nop
	

# Function: VS_DrawString
# Purpose: Draws a string to the display area 
# a0: x, a1: y, a2: string, a3: strlen 
	.text 
VS_DrawString:
	addiu sp, sp, -8
    sw ra, 0(sp)
    sw s0, 4(sp)
	move t1, a0          ; orgx = x;
	move t2, a1          ; orgy = y;
	li t0, VS_IO
DrawChar:
	lbu a0, 0(a2)        ; c = *string;
	addiu a2, a2, 0x1    ; string++; (delay slot)
	li t3, 32
	beq  a0, t3, vs_draw_space
	nop
	jal VS_CharData        ; data = VS_CharData(c);
	li t3, VS_CPU_TO_VRAM ; gpu0_cmd = VS_CPU_TO_VRAM; (delay slot)
	sw t3, VS_GP0(t0)    ; *vs_gp0 = gpu0_cmd;
	andi t1, t1, 0xFFFF  ; x &= 0xFFFF;
	sll t3, a1, 0x10     ; y <<= 16;
	addu t3, t3, t1     ; y += x;
	sw t3, VS_GP0(t0)    ; *vs_gp0 = y;
	li t3, VS_FONTW       ; w = VS_IMGW;
	li t4, VS_FONTH       ; h = VS_IMGH;
	sll t4, t4, 0x10     ; h <<= 16;
	addu t4, t4, t3     ; h += w;
	sw t4, VS_GP0(t0)    ; *vs_gp0 = h;
	li t3, VS_FONTW       ; w = VS_FONTW;
	li t4, VS_FONTH       ; h = VS_FONTH;
	addu t1, t1, t3     ; x += w;
	mult t3, t4          ; size = w * h;
	mflo t3 
	sll t3, t3, 0x1      ; size <<= 1;
	sra t3, t3, 0x2      ; size /= 4;
TransferLoop:
	lw t4,0(v0)
	addiu v0, v0, 0x4
	sw t4, VS_GP0(t0)
	bnez t3, TransferLoop
	subi t3, t3, 0x1
	blez a3, end
	subi a3, a3, 0x1     ; strlen--; (delay slot)
	b DrawChar
	nop
	
vs_draw_space:
	addi t1, t1, 0x8     ; x += 8;
	b   DrawChar
	subi a3, a3, 0x1     ; strlen--;
	
end:
	lw ra, 0(sp)
    lw s0, 4(sp)
    addiu sp, sp, 8
    jr ra
	nop
	
# Function: VS_Int2String
# Purpose: Converts an integer into an ASCII string
# a0: string, a1: int
	.text
VS_Int2String:
	li t0, 0x0         		 ; digits = 0;
	li t1, 0x0A        		 ; base = 10;
	move t2, a1        		 ; tempInt = int; 
CountDigits:
	div t2, t1                 ; tempInt /= base;
	mflo t2       
	addi t0, t0, 0x1           ; digits++;
	bgtz t2, CountDigits        ; if(tempInt > 0) { goto CountDigits; }
	nop
ConvertInt:
	subi t2, t0, 0x1   		 ; tempDigits = digits - 1;
	add a0, a0, t2   		 ; buf += tempDigits;
ConvertLoop:         
	divu  a1, t1               ; result = int % base;
	mfhi  t3
	addi  t3, t3, 0x30         ; result += 0x30;
	sb    t3, 0(a0)            ; *string = result;
	div   a1, t1               ; int = int / base;
	mflo  a1 
	bgtz  a1, ConvertLoop       ; if(int > 0) { goto ConvertLoop; }
	subi  a0, a0, 0x1          ; string--;
	move v0, t0
	jr ra 
	nop
	
	.data 
	.align, 4 
PattyInput:
	.empty, 8
	
	.data
	.align, 4
vs_rand_index:
	.empty, 4
	
	.data 
	.align, 4 
Score:
	.empty, 4
	
.data
.align, 4
Format:
	
.data
.align, 4
Text:
.ascii "SCORE =            "
	
	.data
	.align, 4
rndtable: 
	.byte 0x0, 0x8, 0x6d, 0xdc, 0xde, 0xf1, 0x95, 0x6b, 0x4b, 0xf8, 0xfe, 0x8c, 0x10, 0x42, 0x4a, 0x15, 0xd3, 0x2f, 0x50, 0xf2, 0x9a, 0x1b, 0xcd, 0x80, 0xa1 
	.byte 0x59, 0x4d, 0x24, 0x5f, 0x6e, 0x55, 0x30, 0xd4, 0x8c, 0xd3, 0xf9, 0x16, 0x4f, 0xc8, 0x32, 0x1c, 0xbc, 0x34, 0x8c, 0xca, 0x78, 0x44, 0x91, 0x3e, 0x46
	.byte 0xb8, 0xbe, 0x5b, 0xc5, 0x98, 0xe0, 0x95, 0x68, 0x19, 0xb2, 0xfc, 0xb6, 0xca, 0xb6, 0x8d, 0xc5, 0x4, 0x51, 0xb5, 0xf2, 0x91, 0x2a, 0x27, 0xe3, 0x9c
	.byte 0xc6, 0xe1, 0xc1, 0xdb, 0x5d, 0x7a, 0xaf, 0xf9, 0x0, 0xaf, 0x8f, 0x46, 0xef, 0x2e, 0xf6, 0xa3, 0x35, 0xa3, 0x6d, 0xa8, 0x87, 0x2, 0xeb, 0x19, 0x5c
	.byte 0x14, 0x91, 0x8a, 0x4d, 0x45, 0xa6, 0x4e, 0xb0, 0xad, 0xd4, 0xa6, 0x71, 0x5e, 0xa1, 0x29, 0x32, 0xef, 0x31, 0x6f, 0xa4, 0x46, 0x3c, 0x2, 0x25, 0xab
	.byte 0x4b, 0x88, 0x9c, 0xb, 0x38, 0x2a, 0x92, 0x8a, 0xe5, 0x49, 0x92, 0x4d, 0x3d, 0x62, 0xc4, 0x87, 0x6a, 0x3f, 0xc5, 0xc3, 0x56, 0x60, 0xcb, 0x71, 0x65 
	.byte 0xaa, 0xf7, 0xb5, 0x71, 0x50, 0xfa, 0x6c, 0x7, 0xff, 0xed, 0x81, 0xe2, 0x4f, 0x6b, 0x70, 0xa6, 0x67, 0xf1, 0x18, 0xdf, 0xef, 0x78, 0xc6, 0x3a, 0x3c
	.byte 0x52, 0x80, 0x3, 0xb8, 0x42, 0x8f, 0xe0, 0x91, 0xe0, 0x51, 0xce, 0xa3, 0x2d, 0x3f, 0x5a, 0xa8, 0x72, 0x3b, 0x21, 0x9f, 0x5f, 0x1c, 0x8b, 0x7b, 0x62
	.byte 0x7d, 0xc4, 0xf, 0x46, 0xc2, 0xfd, 0x36, 0xe, 0x6d, 0xe2, 0x47, 0x11, 0xa1, 0x5d, 0xba, 0x57, 0xf4, 0x8a, 0x14, 0x34, 0x7b, 0xfb, 0x1a, 0x24, 0x11
	.byte 0x2e, 0x34, 0xe7, 0xe8, 0x4c, 0x1f, 0xdd, 0x54, 0x25, 0xd8, 0xa5, 0xd4, 0x6a, 0xc5, 0xf2, 0x62, 0x2b, 0x27, 0xaf, 0xfe, 0x91, 0xbe, 0x54, 0x76, 0xde 
	.byte 0xbb, 0x88, 0x78, 0xa3, 0xec, 0xf9

.data 
.align, 4 
Palette:
	.half 0x57, 0x7ff1, 0xea, 0x7fef, 0x12c, 0x7fed, 0x16e, 0xa8, 0x1b0, 0x24, 0x66, 0x660, 0x2, 0x1f2, 0x7fca, 0x320, 0x2e0, 0x2a0, 0x634, 0xec, 0xe75, 0xc80
	.half 0x676, 0xa20, 0x17ff, 0xed8, 0x14e0, 0x14bc, 0x27fd, 0xc40, 0x7ff3, 0x66f3, 0x16c, 0x12df, 0x107a, 0xaa, 0x7eca, 0x121f, 0xe97, 0xc44, 0x170, 0x7ff5
	.half 0x7f8c, 0x16f9, 0x9e0, 0x674, 0x415, 0x1b3, 0x12e, 0x80, 0x13, 0x46cd, 0x464, 0x5942, 0x4b30, 0x46d0, 0x3a8e, 0x1920, 0x9f2, 0x94c, 0x6b8, 0x360
	.half 0x236, 0x1f4, 0xe8, 0x72, 0x7b6e, 0x7a22, 0x66f5, 0x5310, 0x50c0, 0x2ce4, 0x20b1, 0x1e3f, 0x1d07, 0x1ca4, 0x175c, 0x151c, 0x1180, 0xc58, 0x8b2, 0x12a
	.half 0x40, 0x11, 0x7fe5, 0x7fae, 0x7fa5, 0x7f70, 0x7f4b, 0x7f0c, 0x7ee7, 0x7aa5, 0x7a63, 0x69c2, 0x6374, 0x5501, 0x48a1, 0x466b, 0x4590, 0x4584, 0x418e 
	.half 0x3ca0, 0x34e4, 0x3081, 0x264f, 0x21df, 0x20fc, 0x20e0, 0x1fff, 0x1f3f, 0x1eff, 0x1d7e, 0x1d60, 0x1ca0, 0x1bbf, 0x19df, 0x196a, 0x127f, 0x105e, 0xefa
	.half 0xcb8, 0xc1c, 0xa32, 0x9af, 0x4ee, 0x4b8, 0x419, 0xad, 0x69, 0x27, 0x7ff9, 0x7fb0, 0x7f92, 0x7f2e, 0x7f29, 0x7bf7, 0x7aa7, 0x7794, 0x7765, 0x772e
	.half 0x772c, 0x76eb, 0x7606, 0x7583, 0x73f8, 0x73f6, 0x7202, 0x71a8, 0x6fb3, 0x6f69, 0x6f0d, 0x6d21, 0x6bd6, 0x6b2b, 0x6b27, 0x6b04, 0x6aef, 0x6960, 0x674f
	.half 0x6668, 0x65e5, 0x6562, 0x63d5, 0x6377, 0x62f1, 0x62cb, 0x61e3, 0x6168, 0x5f2a, 0x5ed3, 0x5ea4, 0x5e6a, 0x5e07, 0x5de5, 0x5b93, 0x5b34, 0x5981, 0x5903, 0x58c1
	.half 0x5606, 0x5332, 0x51c6, 0x50a2, 0x4fb9, 0x4ef2, 0x4ecb, 0x4de8, 0x4d43, 0x4a66, 0x48e1, 0x470e, 0x46b2, 0x46ab, 0x462c, 0x45ed, 0x4543, 0x428d, 0x4225, 0x4100
	.half 0x4061, 0x3ef2, 0x3eb0, 0x3e6b, 0x3d45, 0x3bdb, 0x39a9, 0x3953, 0x3861, 0x3759, 0x36d2, 0x35eb, 0x35e5, 0x3587, 0x3522, 0x33dc, 0x324f, 0x324a, 0x320d, 0x31e9
	.half 0x3147, 0x3115, 0x30c2, 0x3001, 0x2ffe, 0x2ed5, 0x2e72, 0x2dcb, 0x2d87, 0x2a0c, 0x29cf, 0x29cd, 0x29c8, 0x2927, 0x2861, 0x2653, 0x25a5, 0x24f8, 0x2317, 0x213d
	.half 0x2061, 0x2020, 0x1f9d, 0x1e7f, 0x1e12, 0x1e00, 0x1dcc, 0x1d48, 0x1ce5, 0x1cbc, 0x1cb9, 0x1b7f, 0x1946, 0x193f, 0x18bf, 0x18a2, 0x0

.data
.align, 4 
Sprite:
	.incbin "background.bin"

.data 
.align, 4 
Bucket:
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63 
	.half 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0xc63, 0x421, 0x0, 0x0, 0x821, 0x314a, 0x2908
	.half 0x354a, 0x41ad, 0x3dad, 0x3dad, 0x3dad, 0x356b, 0x7fbd, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x7b7b, 0x777b 
	.half 0x7fde, 0x398c, 0x0, 0x0, 0x821, 0x2929, 0x24e7, 0x2d29, 0x398c, 0x356b, 0x356b, 0x356b, 0x2d29, 0x6f39, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7 
	.half 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x7339, 0x2d4a, 0x0, 0x0, 0x821, 0x314a, 0x2d29, 0x356b, 0x41ce, 0x41ad, 0x41ad, 0x41ad, 0x396b, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c 
	.half 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b9c, 0x7b7b, 0x7fde, 0x398c, 0x0, 0x0, 0x0, 0x421, 0x842, 0x421, 0xc63, 0xc42, 0xc42 
	.half 0xc42, 0xc42, 0xc42, 0x18c6, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x18a5, 0x1ce7, 0xc63, 0x0, 0x0 
	.half 0x0, 0x294a, 0x2d29, 0x2929, 0x398c, 0x41ad, 0x3dad, 0x3dad, 0x398c, 0x5a94, 0x7fbd, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b, 0x777b 
	.half 0x777b, 0x777b, 0xffff, 0x18c6, 0x0, 0x0, 0x0, 0x0, 0x4631, 0x1063, 0x2908, 0x2d29, 0x398c, 0x356b, 0x356b, 0x356b, 0x356b, 0x6f39, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718 
	.half 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6718, 0x6f39, 0x45ef, 0x35ad, 0x0, 0x0, 0x0, 0x0, 0x0, 0x821, 0x2929, 0x2d29, 0x398c, 0x356b, 0x398c, 0x398c, 0x2d29, 0x6f39 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2929, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2d29 
	.half 0x20e7, 0x398c, 0x398c, 0x398c, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2929, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x254a, 0x24e7, 0x24e7, 0x398c, 0x356b, 0x398c, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b, 0x1084, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4210, 0x24e7, 0x2508, 0x314a, 0x398c, 0x356b, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b, 0x318c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2929, 0x2d29, 0x398c, 0x356b 
	.half 0x398c, 0x2d29, 0x735a, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2508, 0x6339, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x294a, 0x24e7, 0x20e7, 0x398c, 0x398c, 0x398c, 0x314a, 0x5673, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b
	.half 0x10a5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a52, 0x20e7, 0x24e7, 0x398c, 0x398c, 0x398c, 0x356b, 0x4a10, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6718, 0x735a, 0x35ad, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x39ce, 0x24e7, 0x24e7, 0x398c, 0x356b, 0x398c, 0x314a, 0x5252, 0x6f39 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b, 0x296b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x421 
	.half 0x2908, 0x398c, 0x398c, 0x398c, 0x356b, 0x398c, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2508, 0x6739, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x821, 0x2929, 0x2929, 0x398c, 0x356b, 0x398c, 0x2d29, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x735a, 0x2d4a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2d29, 0x2d29, 0x398c, 0x356b, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2929, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x254a, 0x20e7, 0x2d29, 0x398c, 0x356b 
	.half 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x775a, 0x1084, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x4a52, 0x20e7, 0x20e7, 0x398c, 0x356b, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x35ad, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3def, 0x20e7, 0x2508, 0x314a, 0x398c, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x775a, 0x296b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x421, 0x2929, 0x2d29, 0x398c, 0x398c, 0x314a, 0x6f39, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2508, 0x6b5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x842 
	.half 0x2929, 0x2508, 0x398c, 0x398c, 0x314a, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a, 0x2d4a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc42, 0x2d29, 0x24e7, 0x398c, 0x398c, 0x2d29, 0x6f5a, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x735a 
	.half 0x398c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2929, 0x24e7, 0x398c, 0x398c, 0x356b, 0x45ef, 0x6f5a, 0x6b18, 0x6b18, 0x6b18, 0x6b18 
	.half 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4e73, 0x20e7, 0x24e7, 0x398c, 0x398c 
	.half 0x314a, 0x4e31, 0x6f5a, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6718, 0x735a, 0x39ce, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x39ce, 0x24e7, 0x2508, 0x2d29, 0x398c, 0x398c, 0x2908, 0x6f39, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x6b18, 0x777b, 0x294a, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24e7, 0x2508, 0x314a, 0x314a, 0x2908, 0x6b18, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7, 0x66f7 
	.half 0x66f7, 0x6f39, 0x1cc6, 0x6318, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5294, 0x4e73, 0x4e73, 0x4e73, 0x4e73, 0x4e73, 0x4a52, 0x4652 
	.half 0x4652, 0x4652, 0x4652, 0x4652, 0x4652, 0x4652, 0x4652, 0x4652, 0x4652, 0x4a52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	
.data 
.align, 4 
KrabbyPatty:
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x85, 0x86, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x116f, 0xdd6, 0xdf7, 0xdd6, 0x11f8, 0x15fa, 0x32dc, 0x223b, 0xdd6, 0x1217, 0x1657, 0x1a76, 0x15cf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1679, 0x26be, 0x161c, 0x1a1c, 0x19fa, 0x1a1a, 0x19fa, 0x19f8, 0x15b7, 0x1195, 0x911, 0x4f0, 0x931 
	.half 0x2659, 0x15f4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x887, 0x1abc, 0x26de, 0x22be, 0x269c, 0x269d, 0x1e5c, 0x1e5c 
	.half 0x1a3b, 0x15b7, 0x1175, 0x3b1c, 0xd51, 0x4cf, 0x4f0, 0x911, 0x11b6, 0xdd3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4e8, 0x2b1e 
	.half 0x2f3f, 0x2efe, 0x2afe, 0x32dc, 0x433c, 0x229d, 0x229d, 0x1e5b, 0x19f9, 0x19f8, 0x3afb, 0x932, 0x4f0, 0x4f0, 0x4f0, 0x932, 0x15d7, 0xdf4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x4c7, 0x377f, 0x377f, 0x375f, 0x2f1e, 0x2afe, 0x26be, 0x229c, 0x269d, 0x227c, 0x227c, 0x1e3b, 0x1a19, 0x15b6, 0x1195, 0xd52, 0x910, 0x911, 0x1173, 0x1195, 0x1e18 
	.half 0x9d3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x22fa, 0x377f, 0x375e, 0x3b7f, 0x377f, 0x333e, 0x2f1f, 0x26be, 0x269d, 0x227d, 0x227c, 0x1e5b, 0x1a19, 0x19d7 
	.half 0x1195, 0x1153, 0xd52, 0xd32, 0x475d, 0x1173, 0x19b5, 0x2a9b, 0x487, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8a9, 0x3bbf, 0x3b7f, 0x3b3d, 0x377f, 0x335e, 0x375f, 0x333e
	.half 0x2afe, 0x2ade, 0x269c, 0x227c, 0x225b, 0x1e3a, 0x1e18, 0x15d6, 0x1194, 0x1173, 0x1153, 0x19b4, 0x1174, 0x1195, 0x15b7, 0x5b1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1256
	.half 0x3b9f, 0x377f, 0x36fb, 0x377f, 0x335f, 0x375f, 0x2f1e, 0x2afe, 0x26bd, 0x3f3d, 0x229c, 0x227b, 0x1e5a, 0x1e39, 0x19f7, 0x1594, 0x1194, 0x1174, 0x1174, 0x1595, 0x15b6, 0x15b6, 0x19f9, 0x465, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f1f, 0x2f5f, 0x335f, 0x335e, 0x335f, 0x2f1e, 0x435e, 0x2f1e, 0x26bf, 0x1e5c, 0x3f1b, 0x229d, 0x227c, 0x1e3a, 0x1e39, 0x19f7, 0x3f1c, 0x19d5, 0x1174
	.half 0x1595, 0x1195, 0x1195, 0x2238, 0x15b7, 0x16f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12fe, 0x231e, 0x2b3e, 0x2b3e, 0x271e, 0x2b3f, 0x26dd, 0x2b1f, 0x26df, 0x229f, 0x2259, 0x26be 
	.half 0x269d, 0x227c, 0x225b, 0x19f8, 0x1595, 0x1195, 0x1174, 0x1195, 0x1195, 0x1195, 0x2237, 0x15b6, 0xdd7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa3c, 0x1abe, 0x1abe, 0x1a9d, 0x1e9e
	.half 0x1ebf, 0x22de, 0x22de, 0x22bf, 0x22bf, 0x229f, 0x229e, 0x269d, 0x269c, 0x1e5b, 0x19d8, 0x1596, 0x1195, 0x1175, 0x1195, 0x1595, 0x1596, 0xd54, 0x1175, 0x995, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x155, 0xdda, 0xdd9, 0x11d9, 0x11fb, 0x163c, 0x165d, 0x1a7e, 0x1a7e, 0x161d, 0x1a3d, 0x1a3e, 0x1e5d, 0x1e5c, 0x1e3a, 0x19f8, 0x1196, 0x1174, 0x1174, 0x1175, 0x1195, 0x1174, 0xd54 
	.half 0xd74, 0x575, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0x516, 0xd77, 0xd77, 0xd77, 0xd98, 0x11d9, 0x11f9, 0x11d9, 0xd76, 0xd77, 0x11ba, 0x11ba, 0x11ba, 0x11b9, 0x11b7
	.half 0xd76, 0xd54, 0xd53, 0xd54, 0xd54, 0xd53, 0xd54, 0x915, 0x66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x224a, 0x1559, 0x976, 0x557, 0x976, 0xd97, 0xdb7, 0xd96 
	.half 0xd55, 0x955, 0x955, 0x955, 0x954, 0xd55, 0x954, 0x933, 0x533, 0x511, 0x931, 0x931, 0x912, 0xcb0, 0x2eea, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1826, 0x22a7, 0x3beb 
	.half 0x2db9, 0x6f5f, 0x673d, 0x35db, 0x14fb, 0x10f9, 0xd13, 0xd12, 0xd12, 0xd13, 0x8d4, 0x8d5, 0xd16, 0x25b6, 0x3217, 0x3e58, 0x39f9, 0x295c, 0x14be, 0x81b, 0x873, 0x42cd, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x12a2, 0x27a8, 0x2b89, 0x2b68, 0x12f3, 0x3eb5, 0x5338, 0x465c, 0x1d1d, 0x149d, 0xc32, 0xc4c, 0x106d, 0xc52, 0x839, 0x147d, 0x317e, 0x62fe, 0xffff, 0x735f, 0x4e3f, 0x251d 
	.half 0x109a, 0x21b1, 0x2f4b, 0x3389, 0x27a8, 0x0, 0x0, 0x0, 0x0, 0x1583, 0x0, 0x1664, 0x2f8a, 0x2747, 0x2b67, 0x3bab, 0x43cf, 0x3b2e, 0x36ee, 0x372c, 0x378b, 0x1a09, 0x150d, 0x112d, 0x1992 
	.half 0x2e18, 0x3ab7, 0x4735, 0x3b8e, 0x2f2b, 0x26ec, 0x1f0e, 0x378b, 0x47ef, 0x370e, 0x2669, 0x1ae5, 0x1be4, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe62, 0x2f88, 0x2b46, 0x2f70, 0x22b4, 0x14eb, 0x18cb 
	.half 0x14cb, 0x14ea, 0x22e5, 0x2f88, 0x2747, 0x2346, 0x37cb, 0x4ff1, 0x4bf0, 0x47ef, 0x3bcd, 0x2b88, 0x2345, 0x2745, 0x1f25, 0x2305, 0x2266, 0xe2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x160 
	.half 0x1ae3, 0x1a0a, 0x377c, 0x1db2, 0x210d, 0x1d0d, 0x212d, 0x1d0d, 0x252f, 0x1a26, 0x33a9, 0x2b69, 0x2b47, 0x2b47, 0x222a, 0x1d8a, 0x218b, 0x218c, 0x25ef, 0x439a, 0x2f31, 0x26e8, 0x22e3, 0x2723, 0x16a7
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc43, 0x0, 0x0, 0x2abd, 0x1df6, 0x1970, 0x1d2d, 0x18ea, 0x14a9, 0x18cb, 0x1509, 0x22a4, 0x2b45, 0x26e4, 0x1948, 0x18ac, 0x14ab, 0x18cb, 0x18cb 
	.half 0x1489, 0x1d0c, 0x3f5d, 0x21f3, 0x19b2, 0x2278, 0x1e7c, 0x4a8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x129, 0x227b, 0x269a, 0x26db, 0x269a, 0x2258, 0x1e16, 0x1df4, 0x19b3, 0x156f 
	.half 0x158d, 0x154e, 0x1530, 0x154f, 0x154e, 0x194f, 0x1971, 0x1dd5, 0x2237, 0x2279, 0x26bb, 0x26bb, 0x229a, 0x1e5c, 0x12a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdd8, 0x19f9 
	.half 0x1a38, 0x227a, 0x269b, 0x2abc, 0x2afc, 0x2efd, 0x2f1e, 0x2efd, 0x2afd, 0x2afd, 0x2afd, 0x2afd, 0x2afd, 0x2afd, 0x2afc, 0x26db, 0x26ba, 0x229a, 0x1e59, 0x1a18, 0x1a1a, 0x4a8, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0xdf8, 0x15d8, 0x15d8, 0x1a18, 0x227a, 0x26bb, 0x2efc, 0x2efd, 0x2efc, 0x2afc, 0x2adc, 0x2adb, 0x26bb, 0x26bb, 0x229a, 0x227a, 0x1a38, 0x15f7, 0x11d6, 0xd96
	.half 0x11b7, 0x15d8, 0xdf8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18f, 0x11d8, 0x11b7, 0x15f7, 0x1e59, 0x269a, 0x2abb, 0x2abb, 0x26bb, 0x269a, 0x229a, 0x2279, 0x1e59 
	.half 0x1e59, 0x1a18, 0x11f7, 0x11b6, 0xd75, 0xd75, 0x1196, 0x11b7, 0x9b5, 0xeb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x86, 0x931, 0x9d5, 0x1a39, 0x227a 
	.half 0x269b, 0x26bb, 0x269a, 0x227a, 0x1e59, 0x1e59, 0x1a38, 0x1a18, 0x15f7, 0x11d6, 0x1196, 0xd96, 0xd95, 0x573, 0x4ec, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x4ea, 0x11d2, 0x1635, 0x1eb9, 0x1eb9, 0x1a98, 0x1678, 0x1657, 0x1236, 0xdf5, 0x9d5, 0x593, 0x14f, 0xcee, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	
# Function: VS_CharData
# Purpose: Returns the image data of the input character
# a0: c
	.text
VS_CharData:
	li  t7, 48
	beq a0, t7, vs_char_zero 
	li  t8, 49
	beq a0, t8, vs_char_one 
	li  t7, 50 
	beq a0, t7, vs_char_two
	li  t8, 51 
	beq a0, t8, vs_char_three
	li  t7, 52 
	beq a0, t7, vs_char_four
	li  t8, 53 
	beq a0, t8, vs_char_five
	li  t7, 54 
	beq a0, t7, vs_char_six
	li  t8, 55 
	beq a0, t8, vs_char_seven
	li  t7, 56 
	beq a0, t7, vs_char_eight
	li  t8, 57 
	beq a0, t8, vs_char_nine
	li  t7, 65 
	beq a0, t7, vs_char_A
	li  t8, 66
	beq a0, t8, vs_char_B
	li  t7, 67
	beq a0, t7, vs_char_C
	li  t8, 68
	beq a0, t8, vs_char_D
	li  t7, 69
	beq a0, t7, vs_char_E
	li  t8, 70
	beq a0, t8, vs_char_F
	li  t7, 71
	beq a0, t7, vs_char_G
	li  t8, 72
	beq a0, t8, vs_char_H
	li  t7, 73
	beq a0, t7, vs_char_I
	li  t8, 74
	beq a0, t8, vs_char_J
	li  t7, 75
	beq a0, t7, vs_char_K
	li  t8, 76
	beq a0, t8, vs_char_L
	li  t7, 77
	beq a0, t7, vs_char_M
	li  t7, 78
	beq a0, t7, vs_char_N
	li  t8, 79
	beq a0, t8, vs_char_O
	li  t7, 80
	beq a0, t7, vs_char_P
	li  t8, 81
	beq a0, t8, vs_char_Q
	li  t7, 82
	beq a0, t7, vs_char_R
	li  t8, 83
	beq a0, t8, vs_char_S
	li  t7, 84
	beq a0, t7, vs_char_T
	li  t8, 85
	beq a0, t8, vs_char_U
	li  t7, 86
	beq a0, t7, vs_char_V
	li  t8, 87
	beq a0, t8, vs_char_W
	li  t7, 88
	beq a0, t7, vs_char_X
	li  t8, 89
	beq a0, t8, vs_char_Y
	li  t7, 90
	beq a0, t7, vs_char_Z
	li  t8, 46
	beq a0, t8, vs_char_period
	li  t7, 33
	beq a0, t7, vs_char_exclamation
	li  t8, 44
	beq a0, t8, vs_char_comma
	li  t7, 39
	beq a0, t7, vs_char_apostrophe
	li  t8, 43
	beq a0, t8, vs_char_plus 
	li  t7, 45
	beq a0, t7, vs_char_minus
	li  t8, 61
	beq a0, t8, vs_char_eq
	li  t7, 123
	beq a0, t7, vs_char_left_curl
	li  t8, 40
	beq a0, t8, vs_char_left_para
	li  t7, 125
	beq a0, t7, vs_char_right_curl
	li  t8, 41
	beq a0, t8, vs_char_right_para
	li  t7, 42
	beq a0, t7, vs_char_star
	li  t8, 59
	beq a0, t8, vs_char_semi
	li  t7, 47
	beq a0, t7, vs_char_slash 
	li  t8, 35
	beq a0, t8, vs_char_pound
	li  t7, 95
	beq a0, t7, vs_char_underscore
	li  t8, 62
	beq a0, t8, vs_char_great
	li  t7, 60
	beq a0, t7, vs_char_less
	nop
	la v0, VS_A
	jr ra
	nop
vs_char_zero:
	la v0, VS_0
	jr ra
	nop
	
vs_char_one:
	la v0, VS_1
	jr ra
	nop
	
vs_char_two:
	la v0, VS_2
	jr ra
	nop
	
vs_char_three:
	la v0, VS_3
	jr ra
	nop
	
vs_char_four:
	la v0, VS_4
	jr ra
	nop
	
vs_char_five:
	la v0, VS_5
	jr ra
	nop
	
vs_char_six:
	la v0, VS_6
	jr ra
	nop
	
vs_char_seven:
	la v0, VS_7
	jr ra
	nop
	
vs_char_eight:
	la v0, VS_8
	jr ra
	nop
	
vs_char_nine:
	la v0, VS_9
	jr ra
	nop

vs_char_A:
	la v0, VS_A
	jr ra
	nop

vs_char_B:
	la v0, VS_B
	jr ra
	nop

vs_char_C:
	la v0, VS_C
	jr ra
	nop

vs_char_D:
	la v0, VS_D
	jr ra
	nop

vs_char_E:
	la v0, VS_E
	jr ra
	nop

vs_char_F:
	la v0, VS_F
	jr ra
	nop

vs_char_G:
	la v0, VS_G
	jr ra
	nop

vs_char_H:
	la v0, VS_H
	jr ra
	nop

vs_char_I:
	la v0, VS_I
	jr ra
	nop

vs_char_J:
	la v0, VS_J
	jr ra
	nop

vs_char_K:
	la v0, VS_K
	jr ra
	nop

vs_char_L:
	la v0, VS_L
	jr ra
	nop

vs_char_M:
	la v0, VS_M
	jr ra
	nop

vs_char_N:
	la v0, VS_N
	jr ra
	nop

vs_char_O:
	la v0, VS_O
	jr ra
	nop

vs_char_P:
	la v0, VS_P
	jr ra
	nop

vs_char_Q:
	la v0, VS_Q
	jr ra
	nop

vs_char_R:
	la v0, VS_R
	jr ra
	nop

vs_char_S:
	la v0, VS_S
	jr ra
	nop

vs_char_T:
	la v0, VS_T
	jr ra
	nop

vs_char_U:
	la v0, VS_U
	jr ra
	nop

vs_char_V:
	la v0, VS_V
	jr ra
	nop

vs_char_W:
	la v0, VS_W
	jr ra
	nop

vs_char_X:
	la v0, VS_X
	jr ra
	nop

vs_char_Y:
	la v0, VS_Y
	jr ra
	nop

vs_char_Z:
	la v0, VS_Z
	jr ra
	nop

vs_char_period:
	la v0, VS_period
	jr ra
	nop
	
vs_char_exclamation:
	la v0, VS_excl
	jr ra
	nop
	
vs_char_quotes:
	la v0, VS_quotes
	jr ra
	nop
	
vs_char_comma:
	la v0, VS_comma
	jr ra
	nop
	
vs_char_semi:
	la v0, VS_semi 
	jr ra
	nop
	
vs_char_star:
	la v0, VS_star
	jr ra
	nop
	
vs_char_great:
	la v0, VS_great
	jr ra
	nop
	
vs_char_less:
	la v0, VS_less
	jr ra
	nop
	
vs_char_eq:
	la v0, VS_eq
	jr ra
	nop
	
vs_char_apostrophe:
	la v0, VS_apostrophe
	jr ra
	nop
	
vs_char_left_curl:
	la v0, VS_left_curl
	jr ra
	nop
	
vs_char_left_para:
	la v0, VS_left_para
	jr ra
	nop
	
vs_char_right_curl:
	la v0, VS_right_curl
	jr ra
	nop
	
vs_char_right_para:
	la v0, VS_right_para
	jr ra
	nop
	
vs_char_plus:
	la v0, VS_plus
	jr ra
	nop
	
vs_char_minus:
	la v0, VS_minus
	jr ra
	nop
	
vs_char_underscore:
	la v0, VS_underscore
	jr ra
	nop

vs_char_slash:
	la v0, VS_slash
	jr ra
	nop
	
vs_char_pound:
	la v0, VS_pound
	jr ra
	nop
	
.data
.align, 4
VS_0: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0 
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_1: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_2: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_3: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_4: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_5: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_6: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0


	.data
	.align, 4
VS_7: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_8: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0


	.data
	.align, 4
VS_9: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_A: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_B: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_C: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_D: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_E: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_F: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_G: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_H: 
.half 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff 
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_I: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_J: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_K: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_L: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_M: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x7fff, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff 
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_N: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_O: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_P: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_Q: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff,

	.data
	.align, 4
VS_R: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_S: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_T: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_U: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_V: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_W: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0
	.half 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_X: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_Y: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_Z: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_excl: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_apostrophe: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_comma: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_eq:
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_quotes: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_great: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_left_curl: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_left_para: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_less: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_minus: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_period: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_plus: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_pound: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff
	.half 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x7fff 
	.half 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_right_curl: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_right_para: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_semi: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_slash: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

	.data
	.align, 4
VS_star: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff
	.half 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	
	.data
	.align, 4
VS_underscore: 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 
	.half 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x7fff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0